
import pandas as pd
import seaborn as sns
import numpy as np
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error

class MyLinearReg:
    """
    This is a basic linear regression class
    """
    def __init__(self):
        print("building linear regression instance")
    
    def _center_data(self, X, y):
        self._x_means = X.mean(axis = 0)
        self._y_mean = y.mean()

        X_centered = X - self._x_means
        y_centered = y - self._y_mean

        return X_centered, y_centered
        
    def fit(self, X, y, append_bias = True):
        
        assert isinstance(X, np.ndarray), "X must be an np.array"
        assert isinstance(y, np.ndarray), "y must be an np.array"
        assert len(X) == len(y)

        X_, y_ = self._center_data(X, y)

        X_inv = np.linalg.inv(X_.T @ X_ )#+ 1001*np.eye(X.shape[1], X.shape[1]))
        self.coef_ = X_inv @ (X_.T @ y_)

        self.intercept_ = self._y_mean - self._x_means @ self.coef_
    
    def predict(self, X):
        assert isinstance(X, np.ndarray), "X must be an np.array"
        
        y_hat = X @ self.coef_ + self.intercept_
        return y_hat